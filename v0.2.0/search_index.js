var documenterSearchIndex = {"docs":
[{"location":"#RANSACVisualizer.jl-1","page":"Home","title":"RANSACVisualizer.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The goal of RANSACVisualizer.jl is to provide some basic methods to visualize point clouds and the results of the RANSAC algorithm runs, based on RANSAC.jl, while separating dependencies that have impact on loading times. Makie.jl is used to achieve these goals. See its docs for examples.","category":"page"},{"location":"#Plot-a-point-cloud-with-surface-normals-1","page":"Home","title":"Plot a point cloud with surface normals","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"showgeometry() plots he points and also the surface normals.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"showgeometry\nshowgeometry!","category":"page"},{"location":"#RANSACVisualizer.showgeometry","page":"Home","title":"RANSACVisualizer.showgeometry","text":"showgeometry(m; arrow = 0.5, kwargs...)\n\nShow a pointcloud with normals, represented by a HomogenousMesh from GeometryTpes.jl. kwargs...are passed to scatter() in the function.\n\n\n\n\n\nshowgeometry(vs, ns; arrow = 0.5, kwargs...)\n\nShow a pointcloud with normals, defined by the vector of points and according surface normals.\n\n\n\n\n\n","category":"function"},{"location":"#RANSACVisualizer.showgeometry!","page":"Home","title":"RANSACVisualizer.showgeometry!","text":"showgeometry!(scene, vs, ns; arrow = 0.5, kwargs...)\n\nShow a pointcloud with normals, defined by the vector of points and according surface normals.\n\nAdds the new cloud to scene. kwargs...are passed to scatter() in the function.\n\n\n\n\n\nshowgeometry!(scene, m; arrow = 0.5, kwargs...)\n\nShow a pointcloud with normals, represented by a HomogenousMesh from GeometryTpes.jl.\n\nAdds the new cloud to scene. kwargs...are passed to scatter() in the function.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"Home","title":"Home","text":"The result should look something like this:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"#Color-the-result-according-to-the-primitives-type-1","page":"Home","title":"Color the result according to the primitives type","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Based on a PointCloud and an array of ScoredShapes, plot the points and color them according to their type.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"showbytype\nshowbytype!","category":"page"},{"location":"#RANSACVisualizer.showbytype","page":"Home","title":"RANSACVisualizer.showbytype","text":"showbytype(pointcloud, candidateA, plotleg=true; kwargs...)\n\nPlot to a new scene. See showbytype!.\n\n\n\n\n\n","category":"function"},{"location":"#RANSACVisualizer.showbytype!","page":"Home","title":"RANSACVisualizer.showbytype!","text":"showbytype!(s, pointcloud, candidateA, plotleg=true; kwargs...)\n\nPlot the candidates and color them based on their type.\n\nArguments\n\ns::Scene: Makie scene.\npointcloud::PointCloud: a pointcloud from RANSAC.jl\ncandidateA::Vector{ScoredShape}: an array of primitives.\nplotleg::Bool: plot a legend?\nkwargs...: any keyword argument can be passed to scatter() in the function.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"Home","title":"Home","text":"You should see something similar: (Image: )","category":"page"},{"location":"#Color-the-primitives-randomly-1","page":"Home","title":"Color the primitives randomly","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Plot the result of a run, but color every primitive differently. Currently ColorSchemes.gnuplot is sampled from beginning to the end by the number of primitives.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"showshapes\nshowshapes!","category":"page"},{"location":"#RANSACVisualizer.showshapes","page":"Home","title":"RANSACVisualizer.showshapes","text":"showshapes(pointcloud, candidateA; plotleg=true, kwargs...)\n\nPlot to a new scene. See showshapes!.\n\n\n\n\n\n","category":"function"},{"location":"#RANSACVisualizer.showshapes!","page":"Home","title":"RANSACVisualizer.showshapes!","text":"showshapes!(s, pointcloud, candidateA; plotleg=true, texts=nothing, kwargs...)\n\nPlot the candidates and color each one differently.\n\nArguments\n\ns::Scene: Makie scene.\npointcloud::PointCloud: a pointcloud from RANSAC.jl\ncandidateA::Vector{ScoredShape}: an array of primitives.\nplotleg::Bool: plot a legend?\ntexts::Union{nothing,Vector{String}}: when nothing is passed (and plotleg==true), a default legend is generated.\nkwargs...: any keyword argument can be passed to scatter() in the function.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"Home","title":"Home","text":"This should result in something similar: (Image: )","category":"page"}]
}
